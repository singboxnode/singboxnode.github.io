<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://singboxnode.github.io/news/article-22893.htm" />
    <title>RestTemplate连接https，证书匹配失败</title>
    <!--meta tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <meta name="description" content="RestTemplate连接https，证书匹配失败 使用RestTemplate进行接口转发，转发地址是 https://内网IP 的格式，由于证书是自签的，所以在调试的时候 接口报错，在jvm中无" />
        <!--//meta tags ends here-->
    <script>
        addEventListener("load", function () {
            setTimeout(hideURLbar, 0);
        }, false);

        function hideURLbar() {
            window.scrollTo(0, 1);
        }
    </script>
    <link rel="icon" href="__ADDON__/img/singboxnode/favicon.ico" type="image/x-icon"/>
    <!-- bootstrap style sheet -->
    <link href="/assets/website/css/singboxnode/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!--smooth box-->
    <link rel="stylesheet" href="/assets/website/css/singboxnode/smoothbox.css" type='text/css' media="all" />
    <!--stylesheets-->
    <link href="/assets/website/css/singboxnode/style.css" rel='stylesheet' type='text/css' media="all">
    <!-- flexslider -->
    <link rel="stylesheet" href="/assets/website/css/singboxnode/flexslider.css" type="text/css" media="all" />
    <!-- fontawesome -->
    <link href="/assets/website/css/singboxnode/fontawesome-all.min.css" rel="stylesheet" type="text/css" media="all">
    <!-- Popup css (for Video Popup) -->
    <link href="/assets/website/css/singboxnode/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <link href="http://fonts.googleapis.com/css?family=PT+Serif:400,400i,700,700i" rel="stylesheet">
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-982T9L7Y5V"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-982T9L7Y5V');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- nav -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-light">
                        <a class="navbar-brand" href="/"><span class="brand-d">SingBox</span>Node</a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavDropdown">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item">
                        <a class="nav-link scroll" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link scroll" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link scroll" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link scroll" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link scroll" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link scroll" href="#">联系</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <!-- //nav -->
    <!-- Clients -->
    <div class="clients py-5" id="client">
        <div class="banner-dott1">
            <div class="h3-head text-center">
                <h1 class="banner-text-h3" style="word-break: break-all;">RestTemplate连接https，证书匹配失败</h1>
            </div>
            <div class="container">
                <p><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文</p>
            </div>
        </div>
    </div>
    <!-- //Clients -->
    <!-- about -->
    <div class="about py-5" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="row py-3">
                        <div class="col-md-12 about-content">
                                              				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h2> <a id="RestTemplatehttps_0" rel="nofollow"></a>RestTemplate连接https，证书匹配失败</h2> <p>使用RestTemplate进行接口转发，转发地址是 <code>https://内网IP</code> 的格式，由于证书是自签的，所以在调试的时候</p> <p>接口报错，在jvm中无法找到匹配的SSL证书：</p> <pre><code class="prism language-java">PKIX path building failed<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>security<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>certpath<span class="token punctuation">.</span></span>SunCertPathBuilderException</span><span class="token operator">:</span> unable <span class="token keyword">to</span> <span class="token namespace">find</span> valid certification path <span class="token keyword">to</span> <span class="token namespace">requested</span> target<span class="token punctuation">]</span> <span class="token keyword">with</span> <span class="token namespace">root</span> cause </code></pre> <p>所以在浏览器访问 <code>https://内网IP</code> ，并通过浏览器将证书下载下来，安装到我们的JDK：</p> <pre><code class="prism language-shell"><span class="token comment"># 进入到安装的jre目录，并将下载下来的证书拷贝到当前目录</span> <span class="token builtin class-name">cd</span> <span class="token variable">$JAVA_HOME</span>/jre/lib/security  <span class="token comment"># 执行安装命令</span> keytool -import -alias 证书别名 -keystore cacerts -file ./xxxx.cer </code></pre> <p>经过上面的操作后重启服务，调用接口发现还是报同样的错误，但是SSL证书确实是安装成功的，所以索性在服务生成RestTemplate的Bean时绕过SSL验证，一般情况下，会通过SimpleClientHttpRequestFactory来构建RestTemplate实例，但是它不支持https，要支持https需要替换SimpleClientHttpRequestFactory为HttpComponentsClientHttpRequestFactory，而且我们还要引入httpclient依赖：</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span> 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>httpclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span> 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.5.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>修改RestTemplateConfig配置类：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token class-name">ClientHttpRequestFactory</span> factory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> <span class="token class-name">ClientHttpRequestFactory</span> <span class="token function">httpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 自定义证书校验器</span>         <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span> trustAllCerts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span>                 <span class="token keyword">new</span> <span class="token class-name">X509TrustManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkClientTrusted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x509Certificates<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token punctuation">}</span>                      <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkServerTrusted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x509Certificates<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token punctuation">}</span>                      <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAcceptedIssuers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                         <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">X509Certificate</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token class-name">SSLContext</span> sslContext <span class="token operator">=</span> <span class="token class-name">SSLContext</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SSL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sslContext<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> trustAllCerts<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">SSLConnectionSocketFactory</span> csf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>sslContext<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">setSSLSocketFactory</span><span class="token punctuation">(</span>csf<span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">HttpComponentsClientHttpRequestFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setHttpClient</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> factory<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>重启服务调用接口，原以为应该没什么大问题了，可是报了不同的错误：</p> <pre><code class="prism language-java"><span class="token class-name">Certificate</span> <span class="token keyword">for</span> <span class="token generics"><span class="token punctuation">&lt;</span>10<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">&gt;</span></span> doesn't match any of the subject alternative names<span class="token operator">:</span> <span class="token punctuation">[</span>localhost<span class="token punctuation">,</span> xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>com<span class="token punctuation">]</span> </code></pre> <p>从上面的错误提示可以看出，其实第一步安装的证书是成功的，但是在创建SSL连接验证域名的时候出错了，打开证书查看证书保护的域名只有 <code>localhost, xx.xx.com</code> ，所以这是报错的根源所在，我通过IP访问的链接，但是IP不在证书保护的域名内，导致验证错误，但是我通过域名访问的链接 <code>https://域名</code> 是成功的。</p> <p>网上查找了原因，我引入的httpclient版本是4.4以上的，所以在生成SSLConnectionSocketFactory实例时，需要指定host验证器，允许ssl连接允许通过不同的hosts，</p> <pre><code class="prism language-java"><span class="token class-name">SSLConnectionSocketFactory</span> csf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>sslContext<span class="token punctuation">,</span> <span class="token class-name">NoopHostnameVerifier</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>完整的RestTemplateConfig配置类：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token class-name">ClientHttpRequestFactory</span> factory<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> <span class="token class-name">ClientHttpRequestFactory</span> <span class="token function">httpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 自定义证书校验器</span>         <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span> trustAllCerts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span>                 <span class="token keyword">new</span> <span class="token class-name">X509TrustManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkClientTrusted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x509Certificates<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token punctuation">}</span>                      <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkServerTrusted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x509Certificates<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token punctuation">}</span>                      <span class="token annotation punctuation">@Override</span>                     <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>cert<span class="token punctuation">.</span></span>X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAcceptedIssuers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                         <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">X509Certificate</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token class-name">SSLContext</span> sslContext <span class="token operator">=</span> <span class="token class-name">SSLContext</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SSL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sslContext<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> trustAllCerts<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">SSLConnectionSocketFactory</span> csf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>sslContext<span class="token punctuation">,</span> <span class="token class-name">NoopHostnameVerifier</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">setSSLSocketFactory</span><span class="token punctuation">(</span>csf<span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">HttpComponentsClientHttpRequestFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setHttpClient</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> factory<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22439.htm">动物疫苗接种时间要求多久（动物疫苗的使用方法及注意事项）</a></p>
                                        <p>下一个：<a href="/news/article-22896.htm">宠物领养活动宣传语（宠物领养活动方案）</a></p>
                                    </div>
                                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-5-node-share.htm" title="「10月5日」最高速度21.7M/S，2024年SingBox节点每日更新订阅免费节点链接">「10月5日」最高速度21.7M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-17-clash-windows.htm" title="「7月17日」最高速度19.4M/S，2024年SingBox节点每日更新订阅免费节点链接">「7月17日」最高速度19.4M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-5-23-free-ssr-subscribe.htm" title="「5月23日」最高速度19.2M/S，2024年SingBox节点每日更新订阅免费节点链接">「5月23日」最高速度19.2M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-free-v2ray.htm" title="「11月6日」最高速度20.6M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐">「11月6日」最高速度20.6M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-3-shadowrocket-node.htm" title="「11月3日」最高速度22.5M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐">「11月3日」最高速度22.5M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-4-clash-v2ray-ss-ssr.htm" title="「9月4日」最高速度18.1M/S，2024年SingBox节点每日更新订阅免费节点链接">「9月4日」最高速度18.1M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-free-v2ray.htm" title="「12月1日」最高速度21.7M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐">「12月1日」最高速度21.7M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-13-clash-windows.htm" title="「10月13日」最高速度22.4M/S，2024年SingBox节点每日更新订阅免费节点链接">「10月13日」最高速度22.4M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-node-share.htm" title="「12月3日」最高速度19.9M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐">「12月3日」最高速度19.9M/S，2024年SingBox节点每日更新订阅免费节点链接，代理机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-22-clash-windows.htm" title="「7月22日」最高速度22M/S，2024年SingBox节点每日更新订阅免费节点链接">「7月22日」最高速度22M/S，2024年SingBox节点每日更新订阅免费节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
    <!-- //about -->
        <!-- footer -->
    <footer>
        <p class="copyright-agileinfo">
            SingBoxNode官网订阅站 版权所有
            <br />
            Powered by WordPress
        </p>
    </footer>
    <!-- //footer -->
    <script src="/assets/website/js/frontend/singboxnode/jquery.min.v3.js"></script>
    <script src="/assets/website/js/frontend/singboxnode/jquery-2.2.3.min.js"></script>
    <!-- gallery -->
    <script src="/assets/website/js/frontend/singboxnode/smoothbox.jquery2.js"></script>
    <!-- //gallery -->
    <!-- pop-up(for video popup)-->
    <script src="/assets/website/js/frontend/singboxnode/jquery.magnific-popup.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',
            fixedContentPos: false,
            fixedBgPos: true,
            overflowY: 'auto',
            closeBtnInside: true,
            preloader: false,
            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

    });
    </script>
    <!-- //pop-up-box (syllabus section video)-->
    <!-- video js (background) -->
    <script src="/assets/website/js/frontend/singboxnode/jquery.vide.min.js"></script>
    <!-- //video js (background) -->
    <!-- banner Slider script  -->
    <script src="/assets/website/js/frontend/singboxnode/responsiveslides.min.js"></script>
    <script>
    $(function() {
        $("#slider, #slider1").responsiveSlides({
            auto: true,
            nav: false,
            speed: 1500,
            namespace: "callbacks",
            pager: true,
        });
    });
    </script>
    <!-- //banner Slider-JavaScript -->
    <script src="/assets/website/js/frontend/singboxnode/responsiveslides.min.js"></script>
    <script>
    $(function() {
        $("#slider4").responsiveSlides({
            auto: true,
            pager: true,
            nav: false,
            speed: 1000,
            namespace: "callbacks",
            before: function() {
                $('.events').append("<li>before event fired.</li>");
            },
            after: function() {
                $('.events').append("<li>after event fired.</li>");
            }
        });
    });
    </script>
    <!-- start-smooth-scrolling -->
    <script src="/assets/website/js/frontend/singboxnode/move-top.js"></script>
    <script src="/assets/website/js/frontend/singboxnode/easing.js"></script>
    <script>
    // jQuery(document).ready(function($) {
    //     $(".scroll").click(function(event) {
    //         event.preventDefault();

    //         $('html,body').animate({
    //             scrollTop: $(this.hash).offset().top
    //         }, 1000);
    //     });
    // });
    </script>
    <!-- //end-smooth-scrolling -->
    <!-- smooth-scrolling-of-move-up -->
    <script>
    $(document).ready(function() {
        /*
        var defaults = {
            containerID: 'toTop', // fading element id
            containerHoverID: 'toTopHover', // fading element hover id
            scrollSpeed: 1200,
            easingType: 'linear' 
        };
        */

        $().UItoTop({
            easingType: 'easeOutQuart'
        });

    });
    </script>
    <script src="/assets/website/js/frontend/singboxnode/SmoothScroll.min.js"></script>
    <!-- //smooth-scrolling-of-move-up -->
    <!-- FlexSlider-JavaScript -->
    <script defer src="/assets/website/js/frontend/singboxnode/jquery.flexslider.js"></script>
    <script>
    // $(function() {
    //     SyntaxHighlighter.all();
    // });
    $(window).load(function() {
        $('.flexslider').flexslider({
            animation: "slide",
            start: function(slider) {
                $('body').removeClass('loading');
            }
        });
    });
    </script>
    <!-- //FlexSlider-JavaScript -->
    <script src="/assets/website/js/frontend/singboxnode/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>